// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('190110910528');
// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
//db.sales.drop();
// Insert a few documents into the sales collection.

db.tusers.insertMany([
  { username: 'abc', password: '123456', sex: '男', birth: new Date('2001-03-01T08:00:00Z'),department:'YX001',grade:'2019级' },
  { username: 'def', password: '123456', sex: '女', birth: new Date('2002-06-01T08:00:00Z'),department:'YX001',grade:'2020级' },
  { username: 'ABC', password: '123456', sex: '男', birth: new Date('2002-05-01T08:00:00Z'),department:'YX001',grade:'2021级' },
  { username: 'DEF', password: '123456', sex: '女', birth: new Date('2000-03-01T08:00:00Z'),department:'YX002',grade:'2019级' },
  { username: 'WQL', password: '123456', sex: '女', birth: new Date('2001-07-01T08:00:00Z'),department:'YX001',grade:'2019级' },
  { username: 'wql', password: '123456', sex: '男', birth: new Date('2002-03-01T08:00:00Z'),department:'YX002',grade:'2021级' },
]);
db.tcources.insertMany([
  { name:'计算机网络',grade:'2019级',teacher:'李老师'},
  { name:'计算机视觉',grade:'2020级',teacher:'王老师'},
  { name:'操作系统',grade:'2021级',teacher:'季老师'},
  { name:'开源软件应用',grade:'2019级',teacher:'张老师'},
  { name:'云计算',grade:'2021级',teacher:'轩辕老师'},
  { name:'人工智能',grade:'2021级',teacher:'皇甫老师'},
  { name:'web开发与应用',grade:'2019级',teacher:'绝老师'},
  { name:'物网络应用',grade:'2020级',teacher:'柯老师'},
  { name:'Android开发与应用',grade:'2021级',teacher:'何老师'},
  { name:'机器学习',grade:'2019级',teacher:'久老师'},
]);
db.tdepartments.insertMany([
 { name:'信息管理与人工智能学院',address:'9号楼'},
 { name:'金融学院',address:'1号楼'},
 { name:'会计学院',address:'4号楼'},
 { name:'经济学院',address:'8号楼'},
 { name:'法学院',address:'10号楼'},
 { name:'外国语学院',address:'11号楼'},
 { name:'艺术学院',address:'7号楼'},
 { name:'人文与传播学院',address:'6号楼'},
 { name:'马克思主义学院',address:'2号楼'},
 { name:'创业学院',address:'3号楼'},
 { name:'国际学院',address:'13号楼'},
]);
db.tclassrooms.insertMany([
 { address:'9101',size:'22'},
 { address:'9102',size:'12'},
 { address:'9103',size:'32'},
 { address:'9201',size:'12'},
 { address:'9202',size:'22'},
 { address:'9203',size:'5'},
 { address:'9301',size:'3'},
 { address:'9302',size:'4'},
 { address:'9303',size:'3'},
]);
// Run a find command to view items sold on April 4th, 2014.
//db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// Build an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];

// Run the aggregation and open a cursor to the results.
// Use toArray() to exhaust the cursor to return the whole result set.
// You can use hasNext()/next() to iterate through the cursor page by page.
//db.sales.aggregate(aggregation);
